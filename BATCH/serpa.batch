#!/bin/bash
#SBATCH --job-name=exp
#SBATCH --time=72:00:00
#SBATCH --nodes=4]
#SBATCH --tasks-per-node=32
#SBATCH --ntasks=128
#SBATCH --partition=hype
#SBATCH --exclusive
#SBATCH --output=%x_%j.out
#SBATCH --error=%x_%j.err

IP=(192.168.30.0)
PROCS=(128)
PROGRAM=$BASE/NPB3.4/NPB3.4-MPI/bin
START=`date +"%d-%m-%Y.%Hh%Mm%Ss"`
OUTPUT=$SCRATCH/npb.$START.csv
LOGS_DIR=$BASE/LOGS
OUTPUT=$LOGS_DIR/npb.$START.csv

MACHINEFILE="$SCRATCH/nodes.$SLURM_JOB_ID"
srun -l hostname | sort -n | awk '{print $2}' > $MACHINEFILE

echo output file: $OUTPUT

echo "env,app,class,interface,metric,value" > $OUTPUT

cd $BASE
ints=(eth ib)

for step in `seq 1 30`; do
	echo "step: $step"	
	for app in *.x; do
		printf "\t app: $app \n"
			for i in ${!ints[*]}; do
			int=${ints[$i]}
			printf "\t\t interface: - $int ($IP) \n"
			runline=""
			runline+="mpirun -np $PROCS -machinefile $MACHINEFILE "
			runline+="--mca btl_base_warn_component_unused 0 --mca orte_base_help_aggregate 0 "
			if [[ int == eth ]]; then
				runline+="--mca btl tcp,self "
				runline+="--mca oob_tcp_if_include $IP/24 --mca btl_tcp_if_include $IP/24 "
				else
				runline+="--mca btl ^tcp "
				runline+="--mca btl_openib_warn_default_gid_prefix 0 "	
			fi	
				runline+="$app 2> /tmp/nas.err 1> /tmp/nas.time"
		done
	done
done

echo "Running >> $runline <<"
	eval "$runline < /dev/null"

TIME=`grep -i "Time in seconds" /tmp/nas.time | awk {'print $5'}`
			echo "${app:0:2},${app:3:1},$int,$TIME" >> $OUTPUT

echo "done"
