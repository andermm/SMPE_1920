#!/bin/bash
#SBATCH --job-name=exp
#SBATCH --time=72:00:00
#SBATCH --nodes=4
#SBATCH --tasks-per-node=32
#SBATCH --ntasks=128
#SBATCH --partition=hype
#SBATCH --exclusive
#SBATCH --output=%x_%j.out
#SBATCH --error=%x_%j.err


BASE=$HOME/SMPE_1920
PROGRAM_BIN=$BASE/NPB3.4/NPB3.4-MPI/bin
PROGRAM_CONFIG=$BASE/NPB3.4/NPB3.4-MPI/config
PROGRAM_COMPILE=$BASE/NPB3.4/NPB3.4-MPI
START=`date +"%d-%m-%Y.%Hh%Mm%Ss"`
LOGS_DIR=$BASE/LOGS
OUTPUT=$LOGS_DIR/npb.$START.csv

cd $PROGRAM_BIN
ints=(eth ib ipoib)

#Define the machine file for MPI
MACHINEFILE_POWER_OF_2=$LOGS_DIR/nodes_power_of_2
MACHINEFILE_SQUARE_ROOT=$LOGS_DIR/nodes_square_root

for step in `seq 1 30`; do
	echo "step: $step"	
	for app in *.x; do
		printf "\t app: $app \n"
			for i in ${!ints[*]}; do
			int=${ints[$i]}
			printf "\t\t interface: - $int ($IP) \n"
			runline=""
			runline+="mpirun --mca btl self"
			if [[ $int == ib ]]; then
				runline+=",openib "
				runline+="--mca btl_openib_if_include mlx5_0:1 "
			fi
			
			if [[ $int == ipoib ]]; then
				runline+=",tcp "
				runline+="--mca btl_tcp_if_include ib0 "
			fi

			if [[ $int == eth ]]; then
				runline+=",tcp "
				runline+="--mca btl_tcp_if_include eno2 "
			fi
			
			if [[ $kernels == bt.D.x || $kernels == sp.D.x ]]; then
				PROCS=121
				runline+="-np $PROCS -machinefile $MACHINEFILE_SQUARE_ROOT "
			else 
				PROCS=128
				runline+="-np $PROCS -machinefile $MACHINEFILE_POWER_OF_2 "
			fi

				runline+="$app 2> /tmp/nas.err 1> /tmp/nas.time"
		done
	done
done

	echo "Running >> $runline <<"
	eval "$runline < /dev/null"

	TIME=`grep -i "Time in seconds" /tmp/nas.time | awk {'print $5'}`
	echo "${app:0:2},$int,$TIME" >> $OUTPUT

echo "done"
exit